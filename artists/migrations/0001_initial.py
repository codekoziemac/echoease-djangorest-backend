# Generated by Django 5.0.7 on 2024-10-14 11:21

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='IDType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, max_length=255, null=True)),
                ('fb_link', models.CharField(blank=True, max_length=255, null=True)),
                ('instagram', models.CharField(blank=True, max_length=255, null=True)),
                ('twitter', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=10, null=True)),
                ('date_approved', models.DateField(blank=True, null=True)),
                ('time_approved', models.TimeField(blank=True, null=True)),
                ('spotify', models.CharField(blank=True, max_length=255, null=True)),
                ('youtube', models.CharField(blank=True, max_length=255, null=True)),
                ('idol', models.CharField(blank=True, max_length=255, null=True)),
                ('years_experience', models.IntegerField(blank=True, null=True)),
                ('award_image1', models.ImageField(blank=True, null=True, upload_to='images/awards')),
                ('award_image2', models.ImageField(blank=True, null=True, upload_to='images/awards')),
                ('award_image3', models.ImageField(blank=True, null=True, upload_to='images/awards')),
                ('connections', models.ManyToManyField(blank=True, to='artists.artist')),
                ('followers', models.ManyToManyField(blank=True, related_name='artists_followed', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='artist', to=settings.AUTH_USER_MODEL)),
                ('genres', models.ManyToManyField(blank=True, to='artists.genre')),
            ],
        ),
        migrations.CreateModel(
            name='ArtistApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, null=True)),
                ('sample_video1', models.FileField(blank=True, null=True, upload_to='videos/')),
                ('sample_video2', models.FileField(blank=True, null=True, upload_to='videos/')),
                ('sample_video3', models.FileField(blank=True, null=True, upload_to='videos/')),
                ('fb_link', models.CharField(blank=True, max_length=255, null=True)),
                ('instagram', models.CharField(blank=True, max_length=255, null=True)),
                ('twitter', models.CharField(blank=True, max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='under_review', max_length=50)),
                ('idol', models.CharField(blank=True, max_length=255, null=True)),
                ('years_experience', models.IntegerField(blank=True, null=True)),
                ('spotify', models.CharField(blank=True, max_length=255, null=True)),
                ('youtube', models.CharField(blank=True, max_length=255, null=True)),
                ('award_image1', models.ImageField(blank=True, null=True, upload_to='images/awards')),
                ('award_image2', models.ImageField(blank=True, null=True, upload_to='images/awards')),
                ('award_image3', models.ImageField(blank=True, null=True, upload_to='images/awards')),
                ('front_id', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('back_id', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('genres', models.ManyToManyField(blank=True, to='artists.genre')),
                ('id_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='artists.idtype')),
            ],
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='portfolio', to='artists.artist')),
            ],
        ),
        migrations.CreateModel(
            name='PortfolioItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('group', models.CharField(blank=True, choices=[('portfolio', 'Portfolio'), ('event', 'Event')], default='portfolio', max_length=50, null=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='artists.portfolio')),
            ],
        ),
        migrations.CreateModel(
            name='PortfolioItemMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_type', models.CharField(choices=[('video', 'Video'), ('image', 'Image')], max_length=50)),
                ('file', models.FileField(upload_to='portfolio_item_medias/')),
                ('portfolio_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medias', to='artists.portfolioitem')),
            ],
        ),
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('artist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='artist_rates', to='artists.artist')),
                ('artist_application', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rates', to='artists.artistapplication')),
            ],
        ),
        migrations.CreateModel(
            name='ConnectionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_requests', to='artists.artist')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_requests', to='artists.artist')),
            ],
            options={
                'unique_together': {('sender', 'receiver')},
            },
        ),
    ]
